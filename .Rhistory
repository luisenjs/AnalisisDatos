library(dplyr)
library(dplyr)
library(ggplot2)
datos <- datos <- read.csv("raft.csv")
# Eliminar el símbolo "%" y convertir la columna Porcentaje a numérica
datos$Porcentaje <- as.numeric(sub("%", "", datos$Porcentaje))
# Crear intervalos y agregar una nueva columna intervalo
datos <- datos %>%
mutate(intervalo = cut(Porcentaje, breaks = c(0, 10, 25, 40, 60, 90, 100),
labels = c("0-10%", "10-25%", "25-40%", "40-60%", "60-90%", "90-100%")))
# Crear un gráfico de barras agrupado por intervalo de porcentaje
ggplot(datos, aes(x = intervalo, fill = intervalo)) +
geom_bar() +
theme_minimal() +
labs(title = "Distribución de Porcentajes por Intervalo", x = "Intervalo de Porcentaje", y = "Número de Logros")
datos <- datos <- read.csv("smite.csv")
# Eliminar el símbolo "%" y convertir la columna Porcentaje a numérica
datos$Porcentaje <- as.numeric(sub("%", "", datos$Porcentaje))
# Crear intervalos y agregar una nueva columna intervalo
datos <- datos %>%
mutate(intervalo = cut(Porcentaje, breaks = c(0, 10, 25, 40, 60, 90, 100),
labels = c("0-10%", "10-25%", "25-40%", "40-60%", "60-90%", "90-100%")))
# Crear un gráfico de barras agrupado por intervalo de porcentaje
ggplot(datos, aes(x = intervalo, fill = intervalo)) +
geom_bar() +
theme_minimal() +
labs(title = "Distribución de Porcentajes por Intervalo", x = "Intervalo de Porcentaje", y = "Número de Logros")
library(dplyr)
library(ggplot2)
datos <- datos <- read.csv("raft.csv")
# Eliminar el símbolo "%" y convertir la columna Porcentaje a numérica
datos$Porcentaje <- as.numeric(sub("%", "", datos$Porcentaje))
# Crear intervalos y agregar una nueva columna intervalo
datos <- datos %>%
mutate(intervalo = cut(Porcentaje, breaks = c(0, 10, 25, 40, 60, 90, 100),
labels = c("0-10%", "10-25%", "25-40%", "40-60%", "60-90%", "90-100%")))
# Crear un gráfico de barras agrupado por intervalo de porcentaje
ggplot(datos, aes(x = intervalo, fill = intervalo)) +
geom_bar() +
theme_minimal() +
labs(title = "Distribución de Porcentajes por Intervalo", x = "Intervalo de Porcentaje", y = "Número de Logros")
# Crear un gráfico de barras agrupado por intervalo de porcentaje
ggplot(datos, aes(x = intervalo, fill = intervalo)) +
geom_bar() +
theme_minimal() +
labs(title = "Cantidad de logros por porcentaje de usuarios que lo han obtenido", x = "Pocentaje de usuarios", y = "Número de Logros")
#install.packages("dplyr")
#install.packages("ggplot")
#install.packages("ggplot2")
library(dplyr)
library(ggplot2)
library(ggplot)
#install.packages("dplyr")
#install.packages("ggplot")
#install.packages("ggplot2")
library(dplyr)
library(ggplot2)
datos <- datos <- read.csv("raft.csv")
# Eliminar el símbolo "%" y convertir la columna Porcentaje a numérica
datos$Porcentaje <- as.numeric(sub("%", "", datos$Porcentaje))
# Crear intervalos y agregar una nueva columna intervalo
datos <- datos %>%
mutate(intervalo = cut(Porcentaje, breaks = c(0, 10, 25, 40, 60, 90, 100),
labels = c("0-10%", "10-25%", "25-40%", "40-60%", "60-90%", "90-100%")))
# Crear un gráfico de barras agrupado por intervalo de porcentaje
ggplot(datos, aes(x = intervalo, fill = intervalo)) +
geom_bar() +
theme_minimal() +
labs(title = "Cantidad de logros por porcentaje de usuarios que lo han obtenido", x = "Pocentaje de usuarios", y = "Número de Logros")
#install.packages("dplyr")
#install.packages("ggplot")
#install.packages("ggplot2")
library(dplyr)
library(ggplot2)
datos <- datos <- read.csv("raft.csv")
# Eliminar el símbolo "%" y convertir la columna Porcentaje a numérica
datos$Porcentaje <- as.numeric(sub("%", "", datos$Porcentaje))
# Crear intervalos y agregar una nueva columna intervalo
datos <- datos %>%
mutate(intervalo = cut(Porcentaje, breaks = c(0, 10, 25, 40, 60, 90, 100),
labels = c("0-10%", "10-25%", "25-40%", "40-60%", "60-90%", "90-100%")))
# Crear un gráfico de barras agrupado por intervalo de porcentaje
ggplot(datos, aes(x = intervalo, fill = intervalo)) +
geom_bar() +
theme_minimal() +
labs(title = "Cantidad de logros por porcentaje de usuarios que lo han obtenido",
x = "Pocentaje de usuarios", y = "Número de Logros")
legend("topright", legend = names(datos_expandidos)[2:7], col = 2:7, lty = 1, bty = "n")
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
library(dplyr)
library(ggplot2)
library(knitr)
library(plotly)
library(kableExtra)
library(MASS)
library(tidyr)
juego <- readline("Ingrese un juego para ver sus logros: ")
datos <- read.csv(nombre_archivo)
# Eliminar el símbolo "%" y convertir la columna Porcentaje a numérica
datos$Porcentaje <- as.numeric(sub("%", "", datos$Porcentaje))
# Crear intervalos y agregar una nueva columna intervalo
datos <- datos %>%
mutate(intervalo = cut(Porcentaje, breaks = c(0, 10, 20, 40, 60, 90, 100),
labels = c("0-10%", "10-20%", "20-40%", "40-60%", "60-90%", "90-100%")))
# Crear un gráfico de barras agrupado por intervalo de porcentaje
ggplot(datos, aes(x = intervalo, fill = intervalo)) +
geom_bar() +
theme_minimal() +
labs(title = "Cantidad de logros por porcentaje de usuarios que lo han obtenido",
x = "Pocentaje de usuarios", y = "Número de Logros")
datos2 <- read.csv("InfoJuegos.csv")
kable(datos2, format = "html") %>%
kable_styling(
full_width = FALSE,
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
font_size = 15,
latex_options = c("scale_down")
) %>%
column_spec(1, bold = TRUE, color = "black", background = "lightblue")
# Ejemplo de datos
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
datos_expandidos$Precio <- gsub("\\$", "", datos_expandidos$Precio)
datos_expandidos$Precio <- as.numeric(datos_expandidos$Precio)
# Muestra el resultado
parcoord(datos_expandidos[, c("NumPlataformas", "Precio")], col = 2:7, lty = 1)
View(datos_expandidos)
library(dplyr)
library(ggplot2)
library(knitr)
library(plotly)
library(kableExtra)
library(MASS)
library(tidyr)
juego <- readline("Ingrese un juego para ver sus logros: ")
nombre_archivo <- paste0(juego, ".csv")
datos <- read.csv(nombre_archivo)
# Eliminar el símbolo "%" y convertir la columna Porcentaje a numérica
datos$Porcentaje <- as.numeric(sub("%", "", datos$Porcentaje))
# Crear intervalos y agregar una nueva columna intervalo
datos <- datos %>%
mutate(intervalo = cut(Porcentaje, breaks = c(0, 10, 20, 40, 60, 90, 100),
labels = c("0-10%", "10-20%", "20-40%", "40-60%", "60-90%", "90-100%")))
# Crear un gráfico de barras agrupado por intervalo de porcentaje
ggplot(datos, aes(x = intervalo, fill = intervalo)) +
geom_bar() +
theme_minimal() +
labs(title = "Cantidad de logros por porcentaje de usuarios que lo han obtenido",
x = "Pocentaje de usuarios", y = "Número de Logros")
datos2 <- read.csv("InfoJuegos.csv")
kable(datos2, format = "html") %>%
kable_styling(
full_width = FALSE,
bootstrap_options = c("striped", "hover", "condensed", "responsive"),
font_size = 15,
latex_options = c("scale_down")
) %>%
column_spec(1, bold = TRUE, color = "black", background = "lightblue")
# Ejemplo de datos
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
datos_expandidos$Precio <- gsub("\\$", "", datos_expandidos$Precio)
datos_expandidos$Precio <- as.numeric(datos_expandidos$Precio)
# Muestra el resultado
parcoord(datos_expandidos[, c("NumPlataformas", "Precio")], col = 2:7, lty = 1)
View(datos_expandidos)
# Ejemplo de datos
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
datos_expandidos$Precio <- gsub("\\$", "", datos_expandidos$Precio)
datos_expandidos$Precio <- as.numeric(datos_expandidos$Precio)
legend("topright", legend = names(datos_expandidos)[2:7], col = 2:7, lty = 1, bty = "n")
# Cargar los datos
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
# Eliminar "USD" del final del precio y convertir a numérico
datos_expandidos$Precio <- as.numeric(gsub("\\$", "", datos_expandidos$Precio))
# Muestra el resultado con el nombre del juego en la leyenda
parcoord(datos_expandidos[, c("NumPlataformas", "Precio")], col = 2:7, lty = 1)
# Crear una leyenda con el nombre del juego
legend("topright", legend = datos_expandidos$Nombre, col = 2:7, lty = 1, bty = "n")
# Cargar los datos
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
# Eliminar "USD" del final del precio y convertir a numérico
datos_expandidos$Precio <- as.numeric(gsub("\\$|USD", "", datos_expandidos$Precio))
# Muestra el resultado con el nombre del juego en la leyenda
parcoord(datos_expandidos[, c("NumPlataformas", "Precio")], col = 2:7, lty = 1)
# Crear una leyenda con el nombre del juego
legend("topright", legend = datos_expandidos$Nombre, col = 2:7, lty = 1, bty = "n")
# Cargar los datos
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
# Extraer la parte numérica del precio y convertir a numérico
datos_expandidos$Precio <- as.numeric(gsub("\\$| USD", "", datos_expandidos$Precio))
# Muestra el resultado con el nombre del juego en la leyenda
parcoord(datos_expandidos[, c("NumPlataformas", "Precio")], col = 2:7, lty = 1)
# Crear una leyenda con el nombre del juego
legend("topright", legend = datos_expandidos$Nombre, col = 2:7, lty = 1, bty = "n")
# Agregar etiquetas con los valores
text(datos_expandidos[, c("NumPlataformas", "Precio")], labels = datos_expandidos$Nombre, pos = 3, col = 2:7)
# Cargar los datos
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
# Extraer la parte numérica del precio y convertir a numérico
datos_expandidos$Precio <- as.numeric(gsub("\\$| USD", "", datos_expandidos$Precio))
# Muestra el resultado con el nombre del juego en la leyenda
parcoord(datos_expandidos[, c("NumPlataformas", "Precio")], col = 2:7, lty = 1)
# Crear una leyenda con el nombre del juego
legend("topright", legend = datos_expandidos$Nombre, col = 2:7, lty = 1, bty = "n")
# Agregar etiquetas con los valores
text(datos_expandidos[, c("NumPlataformas", "Precio")], labels = datos_expandidos$Nombre, pos = 3, col = 2:7)
# Cargar los datos
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
# Extraer la parte numérica del precio y convertir a numérico
datos_expandidos$Precio <- as.numeric(gsub("\\$| USD", "", datos_expandidos$Precio))
# Definir límites para las coordenadas
limits <- matrix(c(0, 10, 0, 100), ncol = 2, byrow = TRUE)  # Cambia los valores según tus necesidades
# Muestra el resultado con límites en las coordenadas
parcoord(datos_expandidos[, c("NumPlataformas", "Precio")], col = 2:7, lty = 1, ylim = limits)
# Cargar los datos
datos3 <- read.csv("comparacion.csv")
# Divide la columna y cuenta los elementos
datos_expandidos <- datos3 %>%
separate_rows(Plataformas, sep = "\\|") %>%
group_by(Nombre) %>%
summarize(NumPlataformas = n_distinct(Plataformas), Precio = first(Precio))
# Extraer la parte numérica del precio y convertir a numérico
datos_expandidos$Precio <- as.numeric(gsub("\\$| USD", "", datos_expandidos$Precio))
# Establecer límites en las coordenadas
limits <- c(0, 10, 0, 100)  # Cambia los valores según tus necesidades
# Ajustar los datos para cumplir con los límites
datos_expandidos <- within(datos_expandidos, {
NumPlataformas <- pmax(pmin(NumPlataformas, limits[2]), limits[1])
Precio <- pmax(pmin(Precio, limits[4]), limits[3])
})
# Muestra el resultado con límites en las coordenadas
parcoord(datos_expandidos[, c("NumPlataformas", "Precio")], col = 2:7, lty = 1)
# Crear una leyenda con el nombre del juego
legend("topright", legend = datos_expandidos$Nombre, col = 2:7, lty = 1, bty = "n")
# Agregar etiquetas con los valores
text(datos_expandidos[, c("NumPlataformas", "Precio")], labels = datos_expandidos$Nombre, pos = 3, col = 2:7)
View(datos_expandidos)
